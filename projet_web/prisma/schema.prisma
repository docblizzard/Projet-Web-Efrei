// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String         @id @unique @default(uuid())
  username              String         @unique
  password              String
  conversations         Conversation[] @relation("UserConversations")
  receivedConversations Conversation[] @relation("ReceiverConversations")
  sentmessage           Message[]      @relation("sentMessages")
  receivedmessage       Message[]      @relation("receivedMessage")
}

model Conversation {
  id         String    @id @unique @default(uuid())
  user       User      @relation("UserConversations", fields: [userId], references: [id])
  userId     String
  receiver   User      @relation("ReceiverConversations", fields: [receiverId], references: [id])
  receiverId String
  messages   Message[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Message {
  id             String       @id @unique @default(uuid())
  user           User         @relation("sentMessages", fields: [userId], references: [id])
  userId         String
  message        String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  receiver       User         @relation("receivedMessage", fields: [receiverId], references: [id])
  receiverId     String
  conversationId String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}
